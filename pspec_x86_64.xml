<PISI>
    <Source>
        <Name>llvm</Name>
        <Homepage>http://llvm.org/</Homepage>
        <Packager>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Packager>
        <License>NCSA</License>
        <PartOf>programming</PartOf>
        <Summary xml:lang="en">Low Level Virtual Machine (Reusable compiler and toolchains)</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://solus-project.com/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>llvm</Name>
        <Summary xml:lang="en">Low Level Virtual Machine (Reusable compiler and toolchains)</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <PartOf>programming</PartOf>
        <Files>
            <Path fileType="library">/usr/lib64/BugpointPasses.so</Path>
            <Path fileType="library">/usr/lib64/LLVMHello.so</Path>
            <Path fileType="library">/usr/lib64/LLVMgold.so</Path>
            <Path fileType="library">/usr/lib64/bfd-plugins/LLVMGold.so</Path>
            <Path fileType="library">/usr/lib64/lib*.so</Path>
            <Path fileType="library">/usr/lib64/lib*.so.*</Path>
        </Files>
    </Package>
    <Package>
        <Name>llvm-32bit</Name>
        <Summary xml:lang="en">32-bit libraries for llvm</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <PartOf>emul32</PartOf>
        <RuntimeDependencies>
            <Dependency release="53">llvm</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/</Path>
            <Path fileType="library">/usr/lib32/lib*.so</Path>
            <Path fileType="library">/usr/lib32/lib*.so.*</Path>
        </Files>
    </Package>
    <Package>
        <Name>llvm-32bit-devel</Name>
        <Summary xml:lang="en">Development files for 32-bit llvm</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="53">llvm-devel</Dependency>
            <Dependency release="53">llvm-32bit</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/lib*.a</Path>
        </Files>
    </Package>
    <Package>
        <Name>llvm-clang</Name>
        <Summary xml:lang="en">Clang Compiler frontend to LLVM</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <PartOf>programming</PartOf>
        <RuntimeDependencies>
            <Dependency release="53">llvm</Dependency>
            <Dependency releaseFrom="53">llvm-devel</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="executable">/usr/bin</Path>
            <Path fileType="library">/usr/lib64/clang</Path>
            <Path fileType="library">/usr/lib64/libclang*.so*</Path>
            <Path fileType="library">/usr/lib64/liblldb*.so*</Path>
            <Path fileType="executable">/usr/libexec</Path>
            <Path fileType="data">/usr/share/clang</Path>
            <Path fileType="man">/usr/share/man/*/*scan-build*</Path>
            <Path fileType="data">/usr/share/opt-viewer</Path>
            <Path fileType="data">/usr/share/scan-build</Path>
            <Path fileType="data">/usr/share/scan-view</Path>
        </Files>
        <Replaces>
            <Package>clang</Package>
        </Replaces>
    </Package>
    <Package>
        <Name>llvm-clang-32bit</Name>
        <Summary xml:lang="en">32bit libraries for clang</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <RuntimeDependencies>
            <Dependency release="53">llvm-32bit</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/libclang*.so*</Path>
        </Files>
    </Package>
    <Package>
        <Name>llvm-clang-32bit-devel</Name>
        <Summary xml:lang="en">Low Level Virtual Machine (Reusable compiler and toolchains)</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <RuntimeDependencies>
            <Dependency releaseFrom="53">llvm-clang-32bit</Dependency>
            <Dependency releaseFrom="53">llvm-clang-devel</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="library">/usr/lib32/clang</Path>
            <Path fileType="library">/usr/lib32/cmake/</Path>
            <Path fileType="library">/usr/lib32/libclang*.a</Path>
        </Files>
    </Package>
    <Package>
        <Name>llvm-clang-devel</Name>
        <Summary xml:lang="en">Development files for building clang plugins</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <RuntimeDependencies>
            <Dependency releaseFrom="53">llvm-clang</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include/clang*</Path>
            <Path fileType="header">/usr/include/lldb*</Path>
            <Path fileType="library">/usr/lib64/libclang*.a</Path>
            <Path fileType="library">/usr/lib64/liblldb*.a</Path>
        </Files>
        <Replaces>
            <Package>clang-devel</Package>
        </Replaces>
    </Package>
    <Package>
        <Name>llvm-devel</Name>
        <Summary xml:lang="en">Development files for llvm</Summary>
        <Description xml:lang="en">The LLVM package contains a collection of modular and reusable compiler and toolchain technologies. The Low Level Virtual Machine (LLVM) Core libraries provide a modern source and target-independent optimizer, along with code generation support for many popular CPUs (as well as some less common ones!). These libraries are built around a well specified code representation known as the LLVM intermediate representation (&quot;LLVM IR&quot;).
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="53">llvm</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="executable">/usr/bin/bugpoint</Path>
            <Path fileType="executable">/usr/bin/llc*</Path>
            <Path fileType="executable">/usr/bin/lli*</Path>
            <Path fileType="executable">/usr/bin/llv*</Path>
            <Path fileType="executable">/usr/bin/opt</Path>
            <Path fileType="header">/usr/include/</Path>
            <Path fileType="library">/usr/lib64/cmake/</Path>
            <Path fileType="library">/usr/lib64/lib*.a</Path>
        </Files>
    </Package>
    <History>
        <Update release="53">
            <Date>2017-11-16</Date>
            <Version>5.0.0</Version>
            <Comment>Packaging update</Comment>
            <Name>Ikey Doherty</Name>
            <Email>ikey@solus-project.com</Email>
        </Update>
    </History>
</PISI>